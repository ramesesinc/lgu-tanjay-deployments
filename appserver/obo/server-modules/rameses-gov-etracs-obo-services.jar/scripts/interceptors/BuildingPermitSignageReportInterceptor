import com.rameses.annotations.*; 

class BuildingPermitSignageReportInterceptor {
	
	@DataContext("vw_building_permit")
	def permitEm;

	@DataContext("obo_app_professional")
	def profEm;

	def findPermit( def id ) {
		//building permit can be loaded using appid or objid(building permit)
		def permit = permitEm.find( [objid: id] ).first();	
		if(!permit) {
			permit = permitEm.find( [appid: id ]).first();
			if(!permit) throw new Exception("Permit not found");
		}
		return permit;
	}

	@After(pattern="FormReportService.getData", eval="#{args[0].reportid == 'building_permit_signage' }")
	public void getBuildingPermitReport( def evt ) {
		def p = evt.args[0];
		def result = evt.result;
		def id = p.parameters.objid;

		def permit = findPermit( id );
		permit.name = permit.applicant?.lastname + ", " + permit.applicant?.firstname;

		def profs = profEm.find( [appid: id ]).select("section.*,designprofessional.*").where("NOT(sectionid IS NULL)").list();

		//correct the name and prcno
		profs.each {
			def m = [:];
			m.name = it.designprofessional.name;
			m.lastname = it.designprofessional.lastname;
			m.firstname = it.designprofessional.firstname;
			m.prc = it.designprofessional.prc;

			def sectionid = it.sectionid.toLowerCase();
			if(sectionid == "architectural") permit.architect = m;
			else if(sectionid == "civil_structural") permit.civil = m;
			else if(sectionid == "electrical") permit.electrical = m;
			else if(sectionid == "mechanical") permit.mechanical = m;
			else if(sectionid == "sanitary") permit.sanitary = m;
			else if(sectionid == "plumbing") permit.plumbing = m;
			else if(sectionid == "electronic") permit.electronic = m;			
		}

		permit.template = "reports/obo/building_permit_signage";
		result.data = permit;
	}	


}